     In our programming efforts, we often want to organize objects or primitive 
data in a form that is easy to access and modify.  The ArrayList class, explored 
in Chapter 5, was used for exactly that purpose.  As the class name implies, an 
ArrayList is implemented using arrays, which are programming constructs that group 
data into lists.  In this chapter we'll explore the details of arrays, which are 
a fundamental component of most high-level languages.  In the Graphics Track 
sections of this chapter, we explore methods that let us draw complex multisided 
figures and examine the events generated by the mouse and the keyboard.
     An array is a simple but powerful programming language construct used to group 
and organize data.  When writing a program that manages a large amount of information, 
such as a list of 100 names, it is not practical to declare separate variables for 
each piece of data.  Arrays solve this problem by letting us declare one variable 
that can hold multiple, individual values.
     An array is a list of values.  Each value is stored at a specific, numbered 
position in the array.  The number corresponding to each position is called an 
index or a subscript.  Figure 8 shows an array of integers and the indexes that 
correspond to each position.  The array is called height; it contains integers 
that represent several people's heights in inches.
     In Java, array indexes always begin at zero.  Therefore the valued stored 
at index 5 is actually the sixth value in the array.  The array shown in Figure 8 
has 11 values, indexed from 0 to 10.
     To access a value in an array, we use the name of the array followed by the 
index in square brackets.  For example, the following expression refers to the 
ninth value in the array height: height[8].
     According to Figure 8, height[8] (pronounced height-sub-eight) contains the 
value 79.  Don't confuse the value of the index, in this case 8, with the value 
stored in the array at that index, in this case 79.